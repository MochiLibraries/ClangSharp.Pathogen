<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Platforms>x64</Platforms>
    <PlatformTarget>x64</PlatformTarget>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    
    <!-- Paths to LLVM things -->
    <LibClangPathogenPathWindows>$(MSBuildThisFileDirectory)../build/bin/libclang.dll</LibClangPathogenPathWindows>
    <LibClangPathogenPathLinux>$(MSBuildThisFileDirectory)../build-linux/lib/libclang.so</LibClangPathogenPathLinux>
    <PathogenExtensionsCppPath>$(MSBuildThisFileDirectory)../external/llvm-project/clang/tools/libclang/PathogenExtensions.cpp</PathogenExtensionsCppPath>
    <LicenseFilePath>$(MSBuildThisFileDirectory)../external/llvm-project/clang/LICENSE.TXT</LicenseFilePath>
    
    <!-- Package Info -->
    <!--
    In theory this should be the SPDX expression for LLVM.
    However, due to https://github.com/NuGet/Home/issues/8027 I think it's better to just include the license file in this case
    so that the developer can more clearly see the pseudo-dual licensing thing they have going on.
    <PackageLicenseExpression>(Apache-2.0 WITH LLVM-exception) OR NCSA</PackageLicenseExpression>
    -->
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <VersionPrefix>0.0.0</VersionPrefix>
    <IncludeLlvmSourceRevisionInVersion>true</IncludeLlvmSourceRevisionInVersion>
    <Description>Runtime package for ClangSharp.Pathogen, not intended for direct consumption.</Description>
    <Authors>LLVM Team and David Maas</Authors>
    <!-- LLVM does not have a good canonical copyright string. They're supposed to put it in their source file as part of Apache 2.0 but they don't. -->
    <Copyright>Pathogen extensions copyright David Maas and Contributors. LLVM copyright (c) 2003-2019 University of Illinois at Urbana-Champaign, LLVM Team.</Copyright>
    
    <!-- This package is only for native runtime, don't try to build/pack the .NET assembly or specify a framework dependency -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
  </PropertyGroup>
  <ItemGroup>
    <None Condition="Exists('$(PathogenExtensionsCppPath)')" Include="$(PathogenExtensionsCppPath)" Link="PathogenExtensions.cpp" />
    <None Condition="Exists('$(LicenseFilePath)')" Include="$(LicenseFilePath)" Link="LICENSE.txt" Pack="true" PackagePath="LICENSE.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="$(LibClangPathogenPathWindows)" Link="libclang-pathogen.dll" Condition="Exists('$(LibClangPathogenPathWindows)')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes/win-x64/native/libclang-pathogen.dll</PackagePath>
    </None>
    <None Include="$(LibClangPathogenPathLinux)" Link="libclang-pathogen.so" Condition="Exists('$(LibClangPathogenPathLinux)')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes/linux-x64/native/libclang-pathogen.so</PackagePath>
    </None>
  </ItemGroup>
  <!-- Error if native runtime needs to be built or llvm-project is missing -->
  <Target Name="_NativeRuntimeChecks" BeforeTargets="Build;Pack">
    <Error Text="PathogenExtensions.cpp is missing, ensure Git submodules are up-to-date." Condition="!Exists('$(PathogenExtensionsCppPath)')" />
    <Error Text="Clang LICENSE.TXT is missing, ensure Git submodules are up-to-date." Condition="!Exists('$(LicenseFilePath)')" />

    <PropertyGroup>
      <_AllRuntimesPresent>true</_AllRuntimesPresent>
      <_AnyRuntimePresent>false</_AnyRuntimePresent>
      <!-- Check Windows runtime -->
      <_AllRuntimesPresent Condition="!Exists('$(LibClangPathogenPathWindows)')">false</_AllRuntimesPresent>
      <_AnyRuntimePresent Condition="Exists('$(LibClangPathogenPathWindows)')">true</_AnyRuntimePresent>
      <!-- Check Linux runtime -->
      <_AllRuntimesPresent Condition="!Exists('$(LibClangPathogenPathLinux)')">false</_AllRuntimesPresent>
      <_AnyRuntimePresent Condition="Exists('$(LibClangPathogenPathLinux)')">true</_AnyRuntimePresent>
    </PropertyGroup>
    <!-- CI builds must have all runtimes present -->
    <Error Text="One or more native runtimes are missing, all runtimes are required for CI builds." Condition="'$(ContinuousIntegrationBuild)' == 'true' and '$(_AllRuntimesPresent)' != 'true'" />
    <!-- For non-CI builds, at least one runtime must be present -->
    <Error Text="No native runtimes found, at least one native runtime must be built using `build-native.cmd` or `build-native.sh`." Condition="'$(ContinuousIntegrationBuild)' != 'true' and '$(_AnyRuntimePresent)' != 'true'" />
  </Target>
</Project>
